template(name="minicard")
  .minicard.h-entry(
    class="{{#if isLinkedCard}}linked-card{{/if}}"
    class="{{#if isLinkedBoard}}linked-board{{/if}}"
    class="minicard-{{colorClass}}")
    if isMiniScreen
      //.handle
      //  .fa.fa-arrows
    unless isMiniScreen
      if showDesktopDragHandles
        .handle
          .fa.fa-arrows
    if cover
      .minicard-cover(style="background-image: url('{{cover.url}}');")
        img.u-featured.sr-only.sr-only-focusable(src="{{cover.url}}")
    if labels
      .minicard-labels
        each labels
          unless hiddenMinicardLabelText
            span.p-label.card-label(class="card-label-{{color}}" title=name)
              +viewer
                = name
          if hiddenMinicardLabelText
            .minicard-label(class="card-label-{{color}}" title="{{name}}")
    .minicard-title.p-name
      if $eq 'prefix-with-full-path' currentBoard.presentParentTask
        .parent-prefix
          | {{ parentString ' > ' }}
      if $eq 'prefix-with-parent' currentBoard.presentParentTask
        .parent-prefix
          | {{ parentCardName }}
      if isLinkedBoard
        a.js-linked-link
          span.linked-icon.fa.fa-folder
      else if isLinkedCard
        a.js-linked-link
          span.linked-icon.fa.fa-id-card
      if getArchived
        span.linked-icon.linked-archived.fa.fa-archive
      +viewer
        = getTitle
      if $eq 'subtext-with-full-path' currentBoard.presentParentTask
        .parent-subtext
          | {{ parentString ' > ' }}
      if $eq 'subtext-with-parent' currentBoard.presentParentTask
        .parent-subtext
          | {{ parentCardName }}

    .dates
      if getReceived
        unless getStart
          unless getDue
            unless getEnd
              .date
                +minicardReceivedDate
      if getStart
        .date
          +minicardStartDate
      if getDue
        .date
          +minicardDueDate
      if getEnd
         +minicardEndDate
      if getSpentTime
        .date
          +cardSpentTime

    .minicard-custom-fields
      each customFieldsWD
        if definition.showOnCard
          if trueValue
            .minicard-custom-field
              if definition.showLabelOnMiniCard
                .minicard-custom-field-item
                  +viewer
                    = definition.name
              .minicard-custom-field-item
                +viewer
                  = trueValue

    if getAssignees
      .minicard-assignees.js-minicard-assignees
        each getAssignees
          +userAvatar(userId=this)
        hr

    if getMembers
      .minicard-members.js-minicard-members
        each getMembers
          +userAvatar(userId=this)

    .badges
      unless currentUser.isNoComments
        if comments.count
          .badge(title="{{_ 'card-comments-title' comments.count }}")
            span.badge-icon.fa.fa-comment-o.badge-comment
              = ' '
              = comments.count
            //span.badge-comment.badge-text
            //|  {{_ 'comment'}}
      if getDescription
        .badge.badge-state-image-only(title=getDescription)
          span.badge-icon.fa.fa-align-left
            span.p-summary.sr-only.sr-only-focusable {{getDescription}}
      if getVoteQuestion
        .badge.badge-state-image-only(title=getVoteQuestion)
          span.badge-icon.fa.fa-thumbs-up
          span.badge-icon.fa.fa-thumbs-down
      if attachments.count
        .badge
          span.badge-icon.fa.fa-paperclip
          span.badge-text
            span {{attachments.count}}
            span.sr-only.sr-only-focusable Attachments
      if checklists.count
        .badge(class="{{#if checklistFinished}}is-finished{{/if}}")
          span.badge-icon.fa.fa-check-square-o
          span.badge-text.check-list-text.p-x-progress
            span.sr-only.sr-only-focusable Sub-Tasks:
            span.p-x-done-subtask {{checklistFinishedCount}}
            span /
            span.p-x-total-subtask {{checklistItemCount}}
            span.sr-only.sr-only-focusable Completed
